name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install latest stable
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt, clippy
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2.7.3
    - name: Check Rustfmt
      run: cargo fmt -- --check
    - name: Check Clippy
      run: cargo clippy

  read-msrv:
    runs-on: ubuntu-22.04
    outputs: 
      msrv: ${{ steps.read-declared-msrv.outputs.msrv }}
    steps:
      - uses: actions/checkout@v4
      - id: read-declared-msrv
        name: Read msrv from Cargo.toml rust_version field
        run: |
          msrv=$(cargo metadata  --no-deps --format-version  1 | jq -r '.packages | map(select(.name == "arqoii") | ."rust_version") | .[0]')
          echo "msrv=${msrv}"
          echo "msrv=${msrv}" >>  "$GITHUB_OUTPUT"
          echo "${GITHUB_OUTPUT}"


        
  build:
    needs: [lint, read-msrv]

    strategy:
      matrix:
        channel: ["stable", "beta", "nightly", "${{ needs.read-msrv.outputs.msrv }}"]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install desired toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain:  ${{matrix.channel}}
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2.7.3
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
